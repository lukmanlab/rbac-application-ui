import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react"
import type { User } from "./userSlice"
import { apiEndpoint } from "@/utils/api"

export const userApiSlice = createApi({
  reducerPath: "userApi",
  baseQuery: fetchBaseQuery({
    baseUrl: apiEndpoint,
  }),
  endpoints: (builder) => ({
    getAllUser: builder.query({
      query: ({ pageId, pageSize }) => ({
        url: `/v1/users?page_id=${pageId}&page_size=${pageSize}`,
        method: 'GET',
      }),
      transformResponse: (response: {
        data: {
          all_user: User[]
        }
      }) => {
        return response.data
      }
    }),
    deleteUser: builder.mutation({
      query: (id) => ({
        url: `/v1/users/${id}`,
        method: 'DELETE',
      }),
      transformResponse: (response: { data: { Message: string } }) => {
        return response.data
      }
    }),
  }),
})

// Hooks are auto-generated by RTK-Query
// Same as `userApiSlice.endpoints.getAccount.useQuery`
export const {
  useGetAllUserQuery,
  useDeleteUserMutation
} = userApiSlice